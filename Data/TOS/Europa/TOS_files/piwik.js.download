var _paq = _paq || [];

(function(win, doc) { // PIWIK 1.5

  $wt.piwik = {
    root: {
      "ec.europa.eu": ["ec.europa.eu/index*", "ec.europa.eu/about_*", "ec.europa.eu/represent_*", "ec.europa.eu/info", "ec.europa.eu/priorities", "ec.europa.eu/commission", "ec.europa.eu/about", "ec.europa.eu/atwork", "ec.europa.eu/policies", "ec.europa.eu/contracts_grants", "ec.europa.eu/news", "ec.europa.eu/legislation", "ec.europa.eu/geninfo/europa_analytics_*", "ec.europa.eu/geninfo/legal_notices_*", "ec.europa.eu/green-papers", "ec.europa.eu/white-papers", "ec.europa.eu/cookies", "ec.europa.eu/contact", "ec.europa.eu/services", "ec.europa.eu/your-rights", "ec.europa.eu/visits", "ec.europa.eu/sitemap"],
      "europa.eu": ["europa.eu/index*", "europa.eu/european-union"]
    },
    onRemove: function() {
      _paq = [];
      return [];
    },
    run: function(j) {

      var cook = false;
      var ref = location.href;
      var isFound = false;
      var canBeProcess = false;

      // VALIDATION - MANDATORY NODES
      if (!j["siteID"]) {
        console.log("WTERROR: Piwik, missing 'siteID' parameter");
      }
      else if (!j["sitePath"]) {
        console.log("WTERROR: Piwik, missing 'sitePath' parameter");
      }
      else {

        // SITE ID
        _paq.push(['setSiteId', j["siteID"]]);

        // COOKIE or not
        if (j["sitePath"]) {

          if (Array === j["sitePath"].constructor) {
            cook = j["sitePath"];
          }

          else if (typeof j["sitePath"] === "string") {
            cook = [j["sitePath"]];
          }

          else {
            cook = [];
            console.log("WTERROR: Piwik, wrong 'sitePath' parameter");
          }

          // SITE PATH
          var root = window.wtPiwikRoot || this.root;
          if (root[ cook[0] ]) {
            if (cook.length === 1) {
              _paq.push(["setDomains", root[ cook[0] ]]);
            }
          }
          else {
            _paq.push(["setDomains", j["sitePath"]]);
          }

          // COOKIES
          for (var i = 0, l = cook.length; i < l; i++) {

            var path = "/";

            // remove "http://", "https://" and "//"
            var cookCheck = cook[i].replace(/.*?:?\/\//g, "");

            // remove the starting "/"
            if (cookCheck[0] === "/") {
              cookCheck = cookCheck.slice(1, cookCheck.length);
            }

            // remove the ending "/"
            if (cookCheck.slice(cookCheck.length - 1, cookCheck.length) === "/") {
              cookCheck = cookCheck.slice(0, cookCheck.length - 1);
            }

            // FOUND IN FIRST POSITION
            isFound = (ref.indexOf(cookCheck) !== -1 && ref.indexOf(cookCheck) < 9);

            // CHECK IS REAL FOUND
            if (isFound) {

              isFound = (ref.indexOf(cookCheck) !== -1 || ref === cookCheck);

              if (isFound) {

                var path = cookCheck.split("/")[0];
                path = cookCheck.replace(path, "");
                path = (path === "") ? "/" : path;

                _paq.push(['setCookiePath', path]);

                canBeProcess = true;
              }
            }
          }
        }

        // LANGUAGE
        if (j["lang"]) { // USER
          _paq.push(["setCustomDimension", 1, j["lang"]]);
        }
        else if ($wt.getDocLang(true) !== false) { // UEC
          _paq.push(["setCustomDimension", 1, $wt.getDocLang(true)]);
        }
        else {
          _paq.push(["setCustomDimension", 1, "unknown"]);
        }

        // SECTION
        if (j["siteSection"]) {
          _paq.push(["setCustomDimension", 2, j["siteSection"]]);
        }

        // 404
        if (j["is404"]) {
          _paq.push(['setDocumentTitle', '404/URL=' + encodeURIComponent(document.location.pathname + document.location.search) + '/From=' + encodeURIComponent(document.referrer)]);
        }

        // 403
        else if (j["is403"]) {
          _paq.push(['setDocumentTitle', '403/URL=' + encodeURIComponent(document.location.pathname + document.location.search) + '/From=' + encodeURIComponent(document.referrer)]);
        }

        // INSTANCE
        var instance = j["instance"],
            trackerURL = {
              "ec.europa.eu": "https://webanalytics.ec.europa.eu/",
              "europa.eu": "https://webanalytics.europa.eu/",
              "testing": "https://webgate.ec.europa.eu/fpfis/piwik/"
            };

        trackerURL = trackerURL[instance] || trackerURL["ec.europa.eu"];

        _paq.push(['setTrackerUrl', trackerURL + 'piwik.php']);

        // SEARCH
        if (j["search"]) {
          var keyword = (j["search"]["keyword"]) ? j["search"]["keyword"] : "";
          var category = (j["search"]["category"]) ? j["search"]["category"] : false;
          var count = (j["search"]["count"]) ? j["search"]["count"] : false;
          _paq.push(['trackSiteSearch', keyword, category, count]);
        }

        // BEFORE
        if (j["before"]) {
          if (typeof window[j["before"]] === "function") {
            _paq = window[j["before"]](_paq);
          }
        }

        if (!j["search"]) {
          _paq.push(['trackPageView']);
        }

        // OTHERS
        _paq.push(['enableLinkTracking']);
        _paq.push(['setDoNotTrack', true]);

        // process
        if (canBeProcess) {
          $wt.include(trackerURL + 'piwik.js', function() {
            if (j["callback"]) {
              if (typeof window[j["callback"]] === "function") {
                window[j["callback"]]();
              }
            }
          });
        }

      }
    }
  };

})(window, document);