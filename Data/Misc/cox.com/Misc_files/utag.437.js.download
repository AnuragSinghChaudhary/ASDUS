//~~tv:6021.20161020
//~~tc: Update template to use ForeSee queueing and callback.

//tealium universal tag - utag.sender.6021 ut4.0.201707131854, Copyright 2017 Tealium.com Inc. All Rights Reserved.
try {
  (function (id, loader) {
    var u = {};
    utag.o[loader].sender[id] = u;
    // Start Tealium loader
    // Please do not modify
    if (utag.ut === undefined) { utag.ut = {}; } if (utag.ut.loader === undefined) { u.loader = function (o) { var a, b, c, l; a = document; if (o.type === "iframe") { b = a.createElement("iframe"); b.setAttribute("height", "1"); b.setAttribute("width", "1"); b.setAttribute("style", "display:none"); b.setAttribute("src", o.src); } else if (o.type === "img") { utag.DB("Attach img: " + o.src); b = new Image(); b.src = o.src; return; } else { b = a.createElement("script"); b.language = "javascript"; b.type = "text/javascript"; b.async = 1; b.src = o.src; } if (o.id) { b.id = o.id; } if (typeof o.cb === "function") { b.hFlag = 0; b.onreadystatechange = function () { if ((this.readyState === 'complete' || this.readyState === 'loaded') && !b.hFlag) { b.hFlag = 1; o.cb(); } }; b.onload = function () { if (!b.hFlag) { b.hFlag = 1; o.cb(); } }; } l = o.loc || "head"; c = a.getElementsByTagName(l)[0]; if (c) { utag.DB("Attach to " + l + ": " + o.src); if (l === "script") { c.parentNode.insertBefore(b, c); } else { c.appendChild(b); } } }; } else { u.loader = utag.ut.loader; }
    // End Tealium loader
    u.ev = {'view' : 1};


      u.map={};
  u.extend=[function(a,b){
function addLoadEvent(func) {
    var oldonload = window.onload;
    if (typeof window.onload != 'function') {
        window.onload = func;
    } else {
        window.onload = function() {
            if (oldonload) {
                oldonload();
            }
            func();
        };
    }
}

utag.onload_flag = utag.onload_flag || {};
if (!utag.onload_flag[id]) {
    if (document.readyState != "complete") {
        addLoadEvent(function() {
            utag.view(utag_data, null, [id]);
        });
        return false;
    }
    utag.onload_flag[id] = 1;
}
}];

    u.send = function (a, b) {
      if (u.ev[a] || u.ev.all !== undefined) {
        //##UTENABLEDEBUG##utag.DB("send:##UTID##");

        var c, d, e, f, g;

        u.data = {
          "triggerpath" : "https://gateway.foresee.com/sites/cox_communications/production/gateway.min.js"
        };

        for(c=0;c<u.extend.length;c++){try{d=u.extend[c](a,b);if(d==false)return}catch(e){}};

        g = {};

        // Start Mapping
        for (d in utag.loader.GV(u.map)) {
          if (b[d] !== undefined && b[d] !== "") {
            e = u.map[d].split(",");
            for (f = 0; f < e.length; f++) {
              u.data[e[f]] = b[d];
              //If not overriding triggerpath also put into g object
              if (e[f] !== "triggerpath") {
                g[e[f]] = b[d];
              }
            }
          }
        }
        // End Mapping

        if (!u.data.triggerpath) {
          utag.DB(u.id + ": Tag not fired: Required attribute not populated");
          return;
        }

        // Start Loader Callback
        u.loader_cb = function () {
          for (var key in g) {
            FSR.CPPS.set(key, g[key]);
          }
        };
        // End Loader Callback

        (function(g) {
          // Create acsReady callback queue
          g['acsReady'] = function() {
            var aT = '__acsReady__',
              args = Array.prototype.slice.call(arguments, 0),
              k = setInterval(function() {
                if (typeof g[aT] === 'function') {
                  clearInterval(k);
                  for (i = 0; i < args.length; i++) {
                    g[aT].call(g, function(fn) {
                      return function() {
                        setTimeout(fn, 1)
                      };
                    }(args[i]));
                  }
                }
              }, 50);
          };

          // Set our callback using their function.  Not using cb in the loader.
          acsReady(u.loader_cb);

          // If `FSR` is loaded, track the page view.
          // FSR.run seems to call acsReady (as well as the initial library load)
          if (g.FSR) {
            FSR.run();
          } else {
            u.loader({
              "type": "text/javascript",
              "src" : u.data.triggerpath,
              "id" : "utag_437",
	      "async": "true",
	      "data-vendor": "fs",
	      "data-role": "gateway"
            });
          }
        })(window);

       utag.DB("send:437:COMPLETE");
      }
    };
    utag.o[loader].loader.LOAD(id);
  }('437', 'cox.main'));
} catch (error) {
  utag.DB(error);
}
//end tealium universal tag

