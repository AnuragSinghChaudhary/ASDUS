webpackJsonp([55],{0:function(t,n){t.exports=function(t){"undefined"!=typeof execScript?execScript(t):eval.call(null,t)}},32:function(t,n,e){e(0)(e(41))},41:function(t,n){t.exports="\n(function ($) {\n\n\t// http://stackoverflow.com/questions/499126/jquery-set-cursor-position-in-text-area\n\t$.fn.setCursorPosition = function(pos) {\n\t  this.each(function(index, elem) {\n\t\tif (elem.setSelectionRange) {\n\t\t  elem.setSelectionRange(pos, pos);\n\t\t} else if (elem.createTextRange) {\n\t\t  var range = elem.createTextRange();\n\t\t  range.collapse(true);\n\t\t  range.moveEnd('character', pos);\n\t\t  range.moveStart('character', pos);\n\t\t  range.select();\n\t\t}\n\t  });\n\t  return this;\n\t};\n\n\t// http://stackoverflow.com/questions/2897155/get-caret-position-within-an-text-input-field\n\t$.fn.getCursorPosition = function() {\n\t\tvar input = this.get(0);\n\t\tif (!input) return; // No (input) element found\n\t\tif ('selectionStart' in input) {\n\t\t\t// Standard-compliant browsers\n\t\t\treturn input.selectionStart;\n\t\t} else if (document.selection) {\n\t\t\t// IE\n\t\t\tinput.focus();\n\t\t\tvar sel = document.selection.createRange();\n\t\t\tvar selLen = document.selection.createRange().text.length;\n\t\t\tsel.moveStart('character', -input.value.length);\n\t\t\treturn sel.text.length - selLen;\n\t\t}\n\t}\n\n\n\t$.fn.getCursorRange = function() {\n\t\tvar input = this.get(0);\n\t\tif (!input) return; // No (input) element found\n\t\tif ('selectionStart' in input) {\n\t\t\t// Standard-compliant browsers\n\t\t\treturn {s: input.selectionStart, l:input.selectionEnd-input.selectionStart};\n\t\t} else if (document.selection) {\n\t\t\t// IE NOT IMEPLEMENTED!\n\t\t\t// input.focus();\n\t\t\t// var sel = document.selection.createRange();\n\t\t\t// var selLen = document.selection.createRange().text.length;\n\t\t\t// sel.moveStart('character', -input.value.length);\n\t\t\t// return sel.text.length - selLen;\n\t\t}\n\t}\n\n\t// http://stackoverflow.com/questions/848797/yellow-fade-effect-with-jquery/13106698#13106698\n\tjQuery.fn.highlight = function (duration, class_name, onComplete, delay) {\n\t\tvar defaults = {\n\t\t\tdelay: 1500,\n\t\t\tduration: 1000\n\t\t};\n\t\tdelay = (delay == undefined) ? defaults.delay : delay;\n\t\tduration = duration || defaults.duration;\n\t\tvar easing = 'out';\n\n\t\t$(this).each(function() {\n\t\t\tvar el = $(this);\n\t\t\tvar el_position_changed = false;\n\n\t\t\t// exit if already active.\n\t\t\tif (el.data('highlighted')) return;\n\n\t\t\tvar start_css = {\n\t\t\t\t'position': 'absolute',\n\t\t\t\t'left': 0,\n\t\t\t\t'top': 0,\n\t\t\t\t'width': '100%',\n\t\t\t\t'height': '100%',\n\t\t\t\t'background-color': '#FFF3B8',\n\t\t\t\t'opacity': '.6',\n\t\t\t\t'z-index': '90', // below drag+drop overlay, dialogs, tooltips, and message actions\n\t\t\t\t'pointer-events': 'none'\n\t\t\t};\n\n\t\t\tvar end_css = {\n\t\t\t\t'opacity': 0\n\t\t\t};\n\n\t\t\tfunction onTransitionComplete() {\n\t\t\t\t$(this).remove();\n\t\t\t\tel.data('highlighted', false);\n\t\t\t\tif (el_position_changed) el.css('position', 'static');\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t}\n\n\t\t\tel.data('highlighted', true);\n\n\t\t\t// temporary relative positioning (as needed), so highlight overlay works.\n\t\t\tif (el.css('position') == 'static') {\n\t\t\t\tel.css('position', 'relative');\n\t\t\t\tel_position_changed = true;\n\t\t\t}\n\n\t\t\t$('<div class=\"' + class_name + '\" />')\n\t\t\t.css(start_css)\n\t\t\t.appendTo(el)\n\t\t\t.delay(delay)\n\t\t\t.transition(end_css, duration, easing, onTransitionComplete);\n\t\t});\n\t},\n\n\tjQuery.fn.highlightText = function (duration, class_name, onComplete, delay) {\n\t\tdelay = (delay == undefined) ? 2000 : delay;\n\t\t$(this).each(function () {\n\t\t\tvar el = $(this);\n\t\t\tvar el_original_bg = $(this).css('background-color');\n\t\t\tif (el.data('highlighted')) return;\n\t\t\tel.data('highlighted', true);\n\t\t\tel.css({\n\t\t\t\t'background-color': '#FFF3B8',\n\t\t\t\t'transition': 'background-color 0.25s'\n\t\t\t}).delay(delay).queue(function () {\n\t\t\t\tel.css({\n\t\t\t\t\t'background-color': el_original_bg\n\t\t\t\t})\n\t\t\t\tel.data('highlighted', false);\n\t\t\t\tif (onComplete) onComplete();\n\t\t\t});\n\t\t});\n\t},\n\n\tjQuery.fn.hideWithRememberedScrollTop = function () {\n\t\t$(this).each(function () {\n\t\t\tvar el = $(this);\n\t\t\tif (el.hasClass('hidden')) return;\n\n\t\t\t// remember on self\n\t\t\tel.data('remembered_scrolltop', el.scrollTop());\n\n\t\t\t// remember on descendants\n\t\t\tvar scrollers = el.find(':scrollable()'); // dependent on jquery.scrollintoview\n\n\t\t\tscrollers.each(function (index, desc) {\n\t\t\t\tvar $desc = $(desc);\n\t\t\t\t$desc.data('remembered_scrolltop', $desc.scrollTop());\n\t\t\t});\n\n\t\t\tel.addClass('hidden');\n\t\t});\n\t}\n\n\tjQuery.fn.unhideWithRememberedScrollTop = function () {\n\t\t$(this).each(function () {\n\t\t\tvar el = $(this);\n\t\t\tif (!el.hasClass('hidden')) return;\n\n\t\t\tel.removeClass('hidden');\n\n\t\t\t// reset scrolltop on self\n\t\t\tvar remembered_scrolltop = el.data('remembered_scrolltop');\n\t\t\tif (remembered_scrolltop != undefined) {\n\t\t\t\tel.scrollTop(remembered_scrolltop);\n\t\t\t}\n\n\t\t\t// reset scrolltop on descendants\n\t\t\tvar scrollers = el.find(':scrollable()'); // dependent on jquery.scrollintoview\n\t\t\tif (scrollers) {\n\t\t\t\tscrollers.each(function (index, desc) {\n\t\t\t\t\tvar $desc = $(desc);\n\t\t\t\t\tremembered_scrolltop = $desc.data('remembered_scrolltop');\n\t\t\t\t\tif (remembered_scrolltop != undefined) {\n\t\t\t\t\t\t$desc.scrollTop(remembered_scrolltop);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n})(jQuery);\n\n/*\nHeadroom Plugin\nhttps://github.com/WickyNilliams/headroom.js\n*/\n(function($) {\n\n  if(!$) {\n    return;\n  }\n\n  $.fn.headroom = function(option) {\n    return this.each(function() {\n      var $this   = $(this),\n        data      = $this.data('headroom'),\n        options   = typeof option === 'object' && option;\n\n      options = $.extend(true, {}, Headroom.options, options);\n\n      if (!data) {\n        data = new Headroom(this, options);\n        data.init();\n        $this.data('headroom', data);\n      }\n      if (typeof option === 'string') {\n        data[option]();\n\n        if(option === 'destroy'){\n          $this.removeData('headroom');\n        }\n      }\n    });\n  };\n\n  $('[data-headroom]').each(function() {\n    var $this = $(this);\n    $this.headroom($this.data());\n  });\n\n}(window.Zepto || window.jQuery));\n\n/*!\n * jQuery TextChange Plugin\n * http://www.zurb.com/playground/jquery-text-change-custom-event\n *\n * Copyright 2010, ZURB\n * Released under the MIT License\n */\n(function ($) {\n\n\t$.event.special.textchange = {\n\n\t\tsetup: function (data, namespaces) {\n\t\t\t$(this).data('textchange_lastvalue', this.contentEditable === 'true' ? $(this).html() : $(this).val());\n\t\t\t$(this).bind('keyup.textchange', $.event.special.textchange.handler);\n\n\t\t\tif (data && data.sync) {\n\t\t\t\t$(this).bind('cut.textchange paste.textchange input.textchange', $.event.special.textchange.handler);\n\t\t\t} else {\n\t\t\t\t$(this).bind('cut.textchange paste.textchange input.textchange', $.event.special.textchange.delayedHandler);\n\t\t\t}\n\t\t},\n\n\t\tteardown: function (namespaces) {\n\t\t\t$(this).unbind('.textchange');\n\t\t},\n\n\t\thandler: function (event) {\n\t\t\t$.event.special.textchange.triggerIfChanged($(this));\n\t\t},\n\n\t\tdelayedHandler: function (event) {\n\t\t\tvar element = $(this);\n\t\t\tif (!$.event.special.textchange.timer) {\n\t\t\t\t$.event.special.textchange.timer = setTimeout(function() {\n\t\t\t\t\t$.event.special.textchange.timer = null;\n\t\t\t\t\t$.event.special.textchange.triggerIfChanged(element);\n\t\t\t\t}, 250);\n\t\t\t}\n\t\t},\n\n\t\ttriggerIfChanged: function (element) {\n\t\t\tvar current = element[0].contentEditable === 'true' ? element.html() : element.val();\n\t\t\tif (current !== element.data('textchange_lastvalue')) {\n\t\t\t\telement.trigger('textchange',  [element.data('textchange_lastvalue')]);\n\t\t\t\telement.data('textchange_lastvalue', current);\n\t\t\t}\n\t\t},\n\n        timer: null\n\n\t};\n\n\t$.event.special.hastext = {\n\n\t\tsetup: function (data, namespaces) {\n\t\t\t$(this).bind('textchange', $.event.special.hastext.handler);\n\t\t},\n\n\t\tteardown: function (namespaces) {\n\t\t\t$(this).unbind('textchange', $.event.special.hastext.handler);\n\t\t},\n\n\t\thandler: function (event, textchange_lastvalue) {\n\t\t\tif ((textchange_lastvalue === '') && textchange_lastvalue !== $(this).val()) {\n\t\t\t\t$(this).trigger('hastext');\n\t\t\t}\n\t\t}\n\t};\n\n\t$.event.special.notext = {\n\n\t\tsetup: function (data, namespaces) {\n\t\t\t$(this).bind('textchange', $.event.special.notext.handler);\n\t\t},\n\n\t\tteardown: function (namespaces) {\n\t\t\t$(this).unbind('textchange', $.event.special.notext.handler);\n\t\t},\n\n\t\thandler: function (event, textchange_lastvalue) {\n\t\t\tif ($(this).val() === '' && $(this).val() !== textchange_lastvalue) {\n\t\t\t\t$(this).trigger('notext');\n\t\t\t}\n\t\t}\n\t};\n\n})(jQuery);\n\n(function($) {\n    /**\n     * Auto-growing textareas; technique ripped from Facebook\n     *\n     * http://github.com/jaz303/jquery-grab-bag/tree/master/javascripts/jquery.autogrow-textarea.js\n     */\n    $.fn.autogrow = function(options)\n    {\n        return this.filter('textarea').each(function()\n        {\n            var self         = this;\n            var $self        = $(self);\n            var minHeight    = $self.height();\n            var noFlickerPad = $self.hasClass('autogrow-short') ? 0 : parseInt($self.css('lineHeight')) || 0;\n\n            var shadow = $('<div></div>').css({\n                position:    'absolute',\n                top:         -10000,\n                left:        -10000,\n                width:       $self.width(),\n                fontSize:    $self.css('fontSize'),\n                fontFamily:  $self.css('fontFamily'),\n                fontWeight:  $self.css('fontWeight'),\n                lineHeight:  $self.css('lineHeight'),\n                resize:      'none',\n    \t\t\t'word-wrap': 'break-word'\n            }).appendTo(document.body);\n\n            var update = function(event)\n            {\n                var times = function(string, number)\n                {\n                    for (var i=0, r=''; i<number; i++) r += string;\n                    return r;\n                };\n\n                var val = self.value.replace(/</g, '&lt;')\n                                    .replace(/>/g, '&gt;')\n                                    .replace(/&/g, '&amp;')\n                                    .replace(/\\n$/, '<br/>&nbsp;')\n                                    .replace(/\\n/g, '<br/>')\n                                    .replace(/ {2,}/g, function(space){ return times('&nbsp;', space.length - 1) + ' ' });\n\n\t\t\t\t// Did enter get pressed?  Resize in this keydown event so that the flicker doesn't occur.\n\t\t\t\tif (event && event.data && event.data.event === 'keydown' && event.keyCode === 13) {\n\t\t\t\t\tval += '<br />';\n\t\t\t\t}\n\n\t\t\t\tvar was_h = $self.height();\n\n                shadow.css('width', $self.width());\n                shadow.html(val + (noFlickerPad === 0 ? '...' : '')); // Append '...' to resize pre-emptively.\n                $self.height(Math.max(shadow.height() + noFlickerPad, minHeight));\n\n                // TS specific addition---------------------------------------------------\n                var cp = $self.getCursorPosition();\n                var tl = $self.val().length;\n                if (tl-cp < 10) { // if cursor is towards the end of the text, keep the bottom of the input in view\n\t\t\t\t\tif ($self.length && document.activeElement == $self[0]) {\n\t\t\t\t\t\tvar parent_scroller = $self.closest('.flex_content_scroller');\n\t\t\t\t\t\tvar parent_modal = $self.closest('.modal');\n\t\t\t\t\t\tif (parent_scroller.length) {\n\n\t\t\t\t\t\t\tvar $el_to_keep_in_view = $self;\n\t\t\t\t\t\t\tif ($self.data('el-id-to-keep-in-view')) {\n\t\t\t\t\t\t\t\t$el_to_keep_in_view = $('#'+$self.data('el-id-to-keep-in-view'));\n\t\t\t\t\t\t\t\tif (!$el_to_keep_in_view.length) $el_to_keep_in_view = $self;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!TS.client.ui.isElInView($el_to_keep_in_view, -50, parent_scroller.dimensions_rect())) {\n\t\t\t\t\t\t\t\t$el_to_keep_in_view.scrollintoview({offset:'bottom', px_offset:-50, duration:200});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// if it changed, make sure any monkeyScroller is updated\n\t\t\t\t\t\t\tif ($self.height() != was_h) {\n\t\t\t\t\t\t\t\tTS.ui.utility.updateClosestMonkeyScroller(parent_scroller);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (parent_modal.length == -1) {\n\t\t\t\t\t\t\t$self.scrollintoview({offset:'bottom', px_offset:-50, duration:200});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n                // END TS specific addition-----------------------------------------------\n\t\t\t}\n\n\t\t\t$self.change(update).keyup(update).keydown({event:'keydown'},update);\n\n\t\t\t$(window).on('resize', update);\n\n\t\t\t// TS-specific addition #2: disconnect resize handler when removed. Hat tip: @patrick\n\t\t\t$self.one('remove', function() {\n\t\t\t\t$(window).off('resize', update);\n\t\t\t});\n\n            update();\n        });\n    };\n})(jQuery);\n\n(function($){\n\t$.event.special.destroyed = {\n\t\tremove: function(o) {\n\t\t\tif (o.handler) {\n\t\t  \t\to.handler()\n\t\t\t}\n\t\t}\n\t}\n})(jQuery);\n\n"}},[32]);